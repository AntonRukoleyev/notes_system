name: Build and Publish Docker Images

on:
  push:
    branches: [ main ]

jobs:
  check:
    name: Check changed files
    outputs:
      api_service: ${{ steps.check_files.outputs.api_service }}
      notes_service: ${{ steps.check_files.outputs.notes_service }}
      category_service: ${{ steps.check_files.outputs.category_service }}
      file_service: ${{ steps.check_files.outputs.file_service }}
      tag_service: ${{ steps.check_files.outputs.tag_service }}
      user_service: ${{ steps.check_files.outputs.user_service }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check modified files
        id: check_files
        run: |
            echo "=============== list modified files ==============="
            git diff --name-only HEAD^ HEAD

            echo "========== check paths of modified files =========="
            git diff --name-only HEAD^ HEAD > files.txt
            while IFS= read -r file; do
              echo $file
              if [[ $file == api_service/* ]]; then
                echo "::set-output name=api_service::true"
              elif [[ $file == notes_service/* ]]; then
                echo "::set-output name=notes_service::true"
              elif [[ $file == category_service/* ]]; then
                echo "::set-output name=category_service::true"
              elif [[ $file == file_service/* ]]; then
                echo "::set-output name=file_service::true"
              elif [[ $file == tag_service/* ]]; then
                echo "::set-output name=tag_service::true"
              elif [[ $file == user_service/* ]]; then
                echo "::set-output name=user_service::true"
              else
                echo "file does not belong to any service"
              fi
            done < files.txt

  api_service:
    needs: check
    if: needs.check.outputs.api_service == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: theartofdevel/notes_system.api_service

    - name: Publish to Registry
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        dockerfile: api_service/Dockerfile
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
